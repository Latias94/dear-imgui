name: Build Prebuilt Binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to build (e.g., v0.1.0)'
        required: false
        type: string
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-prebuilt:
    name: Build ${{ matrix.target }}${{ matrix.crt && format(' ({0})', matrix.crt) || '' }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          # macOS (Intel)
          - target: x86_64-apple-darwin
            os: macos-13
          # macOS (Apple Silicon)
          - target: aarch64-apple-darwin
            os: macos-latest
          # Windows (MD)
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            crt: md
          # Windows (MT)
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            crt: mt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ inputs.tag || github.ref }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config

      - name: Install LLVM (libclang) for bindgen (Linux)
        if: runner.os == 'Linux'
        uses: KyleMayes/install-llvm-action@v1
        with:
          directory: ${{ runner.temp }}/llvm
          cached: true
          version: '14.0'

      - name: Install Windows deps
        if: runner.os == 'Windows'
        run: choco install -y llvm


      - name: Select static CRT (Windows MT)
        if: ${{ runner.os == 'Windows' && matrix.crt == 'mt' }}
        shell: pwsh
        run: echo "RUSTFLAGS=-C target-feature=+crt-static" >> $env:GITHUB_ENV

      - name: Build dear-imgui-sys (Release)
        run: cargo build -p dear-imgui-sys --release --target ${{ matrix.target }}
        env:
          TARGET: ${{ matrix.target }}

      - name: Package static library + headers
        run: cargo run -p dear-imgui-sys --bin package --release --target ${{ matrix.target }}
        env:
          IMGUI_SYS_PACKAGE_DIR: ${{ github.workspace }}/packages
          TARGET: ${{ matrix.target }}

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        if: inputs.tag || github.event_name == 'release'
        with:
          tag_name: ${{ inputs.tag || github.ref_name }}
          files: ${{ github.workspace }}/packages/*.tar.gz
