[changelog]
# Header is typically ignored by release-plz when generating a single-entry changelog,
# but keep it minimal for standalone git-cliff runs.
header = """
# Changelog

"""
# release-plz renders a single release entry and provides `commits` in the template context.
# Avoid using `releases`/`release.*` here to prevent template errors.
# Avoid author/committer fields to prevent NO_COMMIT_ID lookups.
body = """
{% if commits | length == 0 %}
- No significant changes.
{% else %}
{% for group, commits in commits | group_by(attribute="group") %}
### {{ group | upper_first }}
{% for commit in commits %}
- {{ commit.message | trim }}{% if commit.breaking %} (BREAKING){% endif %}{% if commit.scope %} [{{ commit.scope }}]{% endif %} ({{ commit.id | truncate(length=7) }})
{% endfor %}
{% endfor %}
{% endif %}
"""
trim = true

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
tag_pattern = ".*"
protect_breaking_commits = true
skip_tags = false

# Group commits by conventional prefixes
commit_parsers = [
  { message = "BREAKING CHANGE", group = "Breaking Changes" },
  { message = "^feat", group = "Features" },
  { message = "^fix", group = "Fixes" },
  { message = "^perf", group = "Performance" },
  { message = "^refactor", group = "Refactor" },
  { message = "^docs", group = "Docs" },
  { message = "^build|^deps|^ci", group = "Build" },
  { message = "^chore|^style|^test", group = "Chore" }
]
